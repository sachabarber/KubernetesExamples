VISUAL STUDIO DOCKER SUPPORT
- Go with the inbuilt stuff then add a new custom docker file, as inbuilt one assumes lots of things, heirachy etc etc, and is not very command line friendly



KUBERNETES IS NOT ABLE TO RUN WINDOWS CONTAINERS
https://stackoverflow.com/questions/47256487/running-windows-docker-images-on-kubernetes-cluster-installed-on-windows-10?rq=1








RUN IT USING DOCKER

docker build -t simplewebapipod:v1 -f C:\Users\sacha\Desktop\KubernetesExamples\Post2_SimplePod\SimpleWebApiPod\NoVisualStudioDockerfile .
docker run -d -p 80:80 --name simplewebapipod simplewebapipod:v1
docker inspect -f "{{ .NetworkSettings.Networks.nat.IPAddress }}" sachabarber/simplewebapipod

grab IP and then -> http://172.20.32.255/api/values


DOCKER HUB

https://ropenscilabs.github.io/r-docker-tutorial/04-Dockerhub.html


> docker login --username=sachabarber
> cd C:\Users\sacha\Desktop\KubernetesExamples\Post2_SimplePod\SimpleWebApiPod
> docker build -t simplewebapipod:v1 -f NoVisualStudioDockerfile .
OR (Windows container)
> docker build -t simplewebapipod:v1 -f C:\Users\sacha\Desktop\KubernetesExamples\Post2_SimplePod\SimpleWebApiPod\NoVisualStudioDockerfile .
> docker tag simplewebapipod:v1 sachabarber/simplewebapipod:v1
> docker push sachabarber/simplewebapipod
> docker run -d -p 80:80 --name simplewebapipod sachabarber/simplewebapipod:v1



# Delete all containers
docker rm $(docker ps -a -q)
# Delete all images
docker rmi $(docker images -q)


RUN IT IN KUBECTL

You create your Docker image and push it to a registry before referring to it in a Kubernetes pod.




https://kubernetes.io/docs/tutorials/stateless-application/hello-minikube/#create-a-docker-container-image
https://medium.com/@maumribeiro/running-your-own-docker-images-in-minikube-for-windows-ea7383d931f6
https://stackoverflow.com/questions/37302776/kubectl-get-pods-kubectl-get-pods-status-imagepullbackoff


> c:\
> cd\
> minikube.exe start --kubernetes-version="v1.9.0" --vm-driver="hyperv" --memory=1024 --hyperv-virtual-switch="Minikube Switch" --v=7 --alsologtostderr 
> minikube docker-env
> & minikube docker-env | Invoke-Expression

> kubectl.exe apply -f C:\Users\sacha\Desktop\KubernetesExamples\Post2_SimplePod\SimpleWebApiPod\SimpleWebApiPod.yaml
 OR
> kubectl run simple-webapi-pod-v1 --image=sacha/simplewebapipod-v1:v1 --port=80





MINIKUBE PRIVATE DOCKER REPO


https://github.com/kubernetes/kubernetes/issues/12835
https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod


https://blog.hasura.io/sharing-a-local-registry-for-minikube-37c7240d0615
https://mtpereira.com/local-development-k8s.html


> c:\
> cd\
> minikube.exe start --kubernetes-version="v1.9.0" --vm-driver="hyperv" --memory=1024 --hyperv-virtual-switch="Minikube Switch" --v=7 --alsologtostderr --insecure-registry localhost:5000
> minikube docker-env
> & minikube docker-env | Invoke-Expression
> kubectl.exe apply -f C:\Users\sacha\Desktop\KubernetesExamples\Post2_SimplePod\SimpleWebApiPod\LocalRegistry.yaml

> In bash
> kubectl port-forward --namespace kube-system \
  $(kubectl get po -n kube-system | grep kube-registry-v0 | \
  awk '{print $1;}') 5000:5000



> cd C:\Users\sacha\Desktop\KubernetesExamples\Post2_SimplePod\SimpleWebApiPod
> docker build -t sacha/simplewebapipod-v1:v1 -f NoVisualStudioDockerfile .
> docker tag sacha/simplewebapipod-v1:v1 localhost:5000/sacha/simplewebapipod-v1:v1
> docker push localhost:5000/sacha/simplewebapipod-v1:v1



> In Bash
> curl http://localhost:5000/v2/_catalog

> docker pull localhost:5000/sacha/simplewebapipod-v1:v1


docker run -d -p 80:80  --name simplewebapipod-v1 localhost:5000/sacha/simplewebapipod-v1:v1


> cd\
> docker images
> kubectl.exe apply -f C:\Users\sacha\Desktop\KubernetesExamples\Post2_SimplePod\SimpleWebApiPod\SimpleWebApiPod.yaml
 OR
> kubectl run simple-webapi-pod-v1 --image=sacha/simplewebapipod-v1:v1 --port=80


kubectl port-forward --namespace kube-system \
$(kubectl get po -n kube-system | grep kube-registry-v0 | \
awk '{print $1;}') 5000:5000


USEFUL COMMANDS

- c:\minikube.exe dashboard (DASHBOARD)
- c:\kubectl describe pod fail-1036623984-hxoas
- kubectl get pods -o wide (DESCRIBE POD)
- kubectl describe pod `<podName>` | grep IP | awk '{print $2}' (GET IP ADDRESS FROM POD)
- kubectl expose deployment simplewebapipod-v1 --type="NodePort" (CREATE DEPLOYMENT WITHOUT YAML)
- kubectl get deploy deploymentname -o yaml --export (GET YAML FROM DEPLOYMENT, CAN USE THIS FOR PODs TOO)
- c:\kubectl.exe run simplewebapipod-node --image=simplewebapipod-v1 --port=80 (RUN IMAGE WITHOUT YAML)






RUN IT USING DOCKER COMPOSE
docker compose up --build






